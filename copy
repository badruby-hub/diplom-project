
          ; optimisticData = data.filter(el => String(el.id) !== String(id));
          ; return fetch(API_URL + '/' + id, { method: 'DELETE' })
            ; .then(res => {
              ; if (!res.ok) {
                ; throw new Error(res.status + " " + res.statusText);
              ; }
            ; });



            –ø–æ—á–µ–º—É –≤ PagesWebsite –Ω–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è data ? 
            ```
            import classes from "./Jsph.module.css";
            import useSWR from "swr";
            import toast from "react-hot-toast";
            import { useState } from "react";
            import { ObjTable, SearchForm } from "../ObjTable";
            
            
            const
              ADD = 'add',
              API_URL = "http://localhost:3333/items",
              CART_URL = "http://localhost:3333/cart",
              fetcher = async () => {
                const res = await fetch(API_URL);
                if (!res.ok) throw new Error("fetcher" + res.status);
                return await res.json();
              },
              infofetcher = async () => {
                console.log("infofetcher",);
                const pr = fetcher();
                toast.promise(pr, {
                  loading: '–ó–∞–≥—Ä—É–∑–∫–∞',
                  success: '–ê–≤—Ç–æ-–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ',
                  error: (err) => `${err.toString()}`,
                });
                return await pr
              };
            export function JSPHTable() {
              const
                { data, error, isLoading, isValidating, mutate } = useSWR(API_URL, infofetcher, { revalidateOnFocus: false }),
                [addItem, setAddItem] = useState(),
            
                onClick = async event => {
                  const
                    action = event.target.closest('[data-action]')?.dataset?.action,
                    id = +event.target.closest('[data-id]')?.dataset?.id;
                  console.log("action and id", action, id);
                  console.log("addItem", addItem);
                  console.log("data", data);
                  if (!action) return;
                  let
                    optimisticData;
                  const
                    getPromise = () => {
                      switch (action) {
                        case ADD:
                          const newObj = {};
                          optimisticData = data.concat(newObj);
                          console.log("newObj", newObj);
                          return fetch(API_URL,
                            {
                              method: 'POST',
                              headers: {
                                'Content-Type': 'application/json'
                              },
                              body: JSON.stringify(newObj)
                            }).then(res => {
                              if (!res.ok) {
                                throw new Error(res.status + " " + res.statusText);
                              }
                            });
            
            
                      }
                    },
                    promise = getPromise();
            
                  if (promise) {
                    toast.promise(promise, {
                      loading: "Fetching" + action,
                      success: 'ok',
                      error: (err) => `${err.toString()}`,
                    });
                    await mutate(promise.then(optimisticData, fetcher), { optimisticData });
                  };
                };
              return <>
                <div
                  className={classes.loading}>
                  {isLoading && '‚åõ'}
                  {isValidating && 'üëÅ'}
                  {error && `‚ùå ${error.toString()}`}
                </div>
                {data && <ObjTable data={data} />}
            
              </>
            }
            ```
            components /components/ObjTable.jsx
            ```
            // import { useMemo, useState } from "react";
            import { FiShoppingCart } from "react-icons/fi";
            import classes from "./ObjTable.module.css"
            
            
            export function ObjTable({ data }) {
                console.debug('ObjTable render', data);
                return <main className={classes.product__section}>
                    {data.map(obj => <article className={classes.product__article} key={obj.id}>
                        <figure className={classes.figure}>
                            <img className={classes.product__image} src={obj.images} alt={obj.title} />
                            <figcaption className={classes.product__caption}>
                                <p className={classes.product__price}><strong>–¶–µ–Ω–∞:</strong><span className={classes.product__value}>{obj.price}‚ÇΩ</span></p>
                                <h2 alt={obj.title} className={classes.product__title}>{obj.title}</h2>
                            </figcaption>
                        </figure>
                        <div className={classes.product__details}>
                            <button className={classes.add__to__cart__button}><FiShoppingCart className={classes.icon__cart}/>| –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É</button>
                        </div>
                    </article>
            
                    )}
                </main>
            }
            
            
            ```
            components /components/LinkPages/index.jsx
            ```
import Link from "next/link";
import { FaShoppingCart, FaUserAlt, FaMapMarkerAlt, FaSearch, FaNeos, FaTimes } from "react-icons/fa";
import { SearchForm } from "../SearchForm/Search";
import classes from "./Link.module.css"
import useSWR from "swr";


const
    pages = [
        { href: '/address', title: <div className={classes.link_icon}><FaMapMarkerAlt className={classes.icon} /> –ù–∞—à –∞–¥—Ä–µ—Å</div> },
        { href: '/authorization', title: <div className={classes.link_icon}><FaUserAlt className={classes.icon} /> –í–æ–π—Ç–∏</div> },
        { href: '/shopping-cart', title: <div className={classes.link_icon}><FaShoppingCart className={classes.icon} /> –ö–æ—Ä–∑–∏–Ω–∞</div> },
    ];
    const
    API_URL = "http://localhost:3333/items",
    fetcher = async () => {
        const res = await fetch(API_URL);
        if (!res.ok) throw new Error("fetcher" + res.status);
        return await res.json();
      };

export function PagesWebsite() {
    const
    { data} = useSWR(API_URL,fetcher);
    console.log('Data from PagesWebsite:', data);
    return <header className={classes.header}>
        <nav className={classes.navigation} >
            <div className={classes.icon__logo}>{<Link className={classes.link_icon} href={'/'}>{<FaNeos />}</Link>}</div>
            {data && <SearchForm data={data} />}
            <ul className={classes.link_form}>
                {pages.map(({ href, title }) =>
                    <li className={classes.link} key={href}>
                        < Link className={classes.link_icon} href={href}>
                            {title}
                        </Link>
                    </li>)}
            </ul>
        </nav>
    </header>
}
            ```
            components/SearchForm/Search.jsx
            ```
           import { useMemo, useState } from "react";
import classes from "./Search.module.css";
import { FaSearch, FaTimes } from "react-icons/fa";

export function SearchForm({ data }) {
    console.log('SearchForm',data);
    const
        [sort, setSort] = useState(null),
        [search, setSearch] = useState(''),
        [isOpen, setIsOpen] = useState(true),
        sortAndFilterData = useMemo(() => {
            return data
                .filter(row => {
                    if (!search.length) return true;
                    for (const key in row) {
                        console.log({ key, row }, row[key]?.includes)
                        if (String(row[key]).toLowerCase()?.includes?.(search.toLowerCase())) return true;
                    }
                    console.log(search)
                    return false;
                });
        }, [data, sort, search]),
        itemClick = (event) => {
            setSearch(event.target.textContent)
            setIsOpen(!isOpen)
        },
    inputClick = () => {
        setIsOpen(true)
    };
    console.debug('ObjTable render');
    return <>
        <form className={classes.search__form}>
            <input
                className={classes.search__input}
                value={search}
                onInput={event => setSearch(event.target.value)}
                onClick={inputClick} />
            <ul className={classes.autocomplete}>
                {
                    search && isOpen
                        ? sortAndFilterData
                        .filter(row => {
                            if (!search.length) return true;
                            for (const key in row) {
                                console.log({ key, row }, row[key]?.includes)
                                if (String(row[key]).toLowerCase()?.includes?.(search.toLowerCase())) return true;
                            }
                            console.log(search)
                            return false;
                        })
                        .map((row) => {
                            return <li
                                onClick={itemClick}
                                key={row.title}
                                className={classes.autocomplete__item}
                            >{row.title}</li>
                        })
                        :
                        null
                }
            </ul>
            <div className={classes.block_btn_search} >
                    <div className={classes.block_icon_search}>{<FaTimes className={classes.icon_search} />}</div>
                    <div className={classes.block_icon_search}>{<FaSearch className={classes.icon_search} />}</div>
                </div>
        </form>
    </>
}
            ```
pages/_api.tsx 
```
import "@/styles/globals.css";
import type { AppProps } from "next/app";
import { PagesWebsite } from "@/components/LinkPages";
import { Toaster } from "react-hot-toast";

export default function App({ Component, pageProps }: AppProps) {
  return <>
 <PagesWebsite />
  <Component {...pageProps} />
  <Toaster/>
  </>
}
```